name: Deploy on Raspberry Pi

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-pi
  cancel-in-progress: false

jobs:
  deploy:
    # IMPORTANT : ces labels doivent correspondre à ceux de ton runner (voir étape 2)
    runs-on: [ self-hosted, linux, arm64, rpi ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Activer pyenv et installer deps runtime
        shell: bash
        run: |
          set -e
          # charge pyenv (chemins par défaut)
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
          pyenv activate masterarbeit-env
          python -V
          pip install -U pip
          pip install -r requirements.txt

      - name: Tests matériels (HIL) - best effort
        shell: bash
        continue-on-error: true
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
          pyenv activate masterarbeit-env
          pytest -q -m hw

      - name: Redémarrer le service systemd
        shell: bash
        run: |
          sudo systemctl daemon-reload || true
          sudo systemctl restart masterarbeit.service || true
          sudo systemctl --no-pager --full status masterarbeit.service || true
